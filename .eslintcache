[{"/home/pratheek/Desktop/React/React-II/jobboard/src/index.js":"1","/home/pratheek/Desktop/React/React-II/jobboard/src/App.js":"2","/home/pratheek/Desktop/React/React-II/jobboard/src/Apply.js":"3","/home/pratheek/Desktop/React/React-II/jobboard/src/form.js":"4","/home/pratheek/Desktop/React/React-II/jobboard/src/Admin.js":"5","/home/pratheek/Desktop/React/React-II/jobboard/src/adminContainer.js":"6","/home/pratheek/Desktop/React/React-II/jobboard/src/Job.js":"7"},{"size":144,"mtime":1606284010977,"results":"8","hashOfConfig":"9"},{"size":261,"mtime":1606407636772,"results":"10","hashOfConfig":"9"},{"size":574,"mtime":1606405339364,"results":"11","hashOfConfig":"9"},{"size":3948,"mtime":1606406880110,"results":"12","hashOfConfig":"9"},{"size":707,"mtime":1606405302342,"results":"13","hashOfConfig":"9"},{"size":703,"mtime":1606406988336,"results":"14","hashOfConfig":"9"},{"size":4832,"mtime":1606409593640,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"rl5f5n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/home/pratheek/Desktop/React/React-II/jobboard/src/index.js",[],["33","34"],"/home/pratheek/Desktop/React/React-II/jobboard/src/App.js",[],"/home/pratheek/Desktop/React/React-II/jobboard/src/Apply.js",["35","36"],"import React,{useState} from 'react'\nimport Form from './form'\nimport axios from 'axios'\nimport Admin from './Admin'\n\nconst Apply =(props)=>{\n\n\nconst formSubmit=(data)=>{\n    axios.post(\"http://dct-application-form.herokuapp.com/users/application-form\",data)\n        .then((response)=>{\n            const result = response.data;\n            console.log(result); \n        })\n        .catch((err)=>{\n            console.log(err.message);\n        })\n    }\n\n    return (\n        <div>\n            <Form formSubmit={formSubmit} />\n        </div>\n    ) \n}\n\nexport default Apply\n\n\n","/home/pratheek/Desktop/React/React-II/jobboard/src/form.js",["37"],"/home/pratheek/Desktop/React/React-II/jobboard/src/Admin.js",[],"/home/pratheek/Desktop/React/React-II/jobboard/src/adminContainer.js",[],"/home/pratheek/Desktop/React/React-II/jobboard/src/Job.js",["38"],"import React, { useState,useEffect } from 'react'\nimport axios from 'axios'\nimport {Modal } from 'react-bootstrap'\n\n\nconst Job = (props)=>{\n    const { job1,profiles } = props\n    const [candidate,setCandidate] = useState(\"\")\n    const [show,setShow] =useState(false)\n    \n    const applications = profiles.filter((applicant)=>{\n        return applicant.jobTitle === job1\n    })\n\n    const handleDetails =(id)=>{\n        axios.get(`http://dct-application-form.herokuapp.com/users/application-form/${id}`)\n                .then((response)=>{\n                    const result = response.data\n                    setCandidate(result);\n                    setShow(true)\n                })//success\n                .catch((err)=>{\n                    alert(err.message);\n                }) //error\n              \n    }\n\n    const shortlisted=(id)=>{\n        const element = id;\n        axios.put(`http://dct-application-form.herokuapp.com/users/application-form/update/${element}`,{\n            \"status\": \"shortlisted\"\n            })\n        .then((response)=>{\n            const result = response.data\n            console.log(result);\n        })\n        .catch((err)=>{\n            alert(err.message)\n        })\n    }\n\n    const rejected =(id)=>{\n            const element = id;\n            axios.put(`http://dct-application-form.herokuapp.com/users/application-form/update/${element}`,{\n                \"status\": \"rejected\"\n                })\n            .then((response)=>{\n                const result = response.data\n                console.log(result);\n            })\n            .catch((err)=>{\n                alert(err.message)\n            })\n        \n    }\n\n    const handleClose=()=>{\n        setShow(false)\n    }\n\n    \n\n    \n\n    return (\n        <div>\n            <h3>{job1}</h3>\n            <p>List of Candidates applied for {job1} job</p>\n            <table class =\"table\">\n                <tr>\n                    <th>Name</th>\n                    <th>Technical Details</th>\n                    <th>Experience</th>\n                    <th>Applied Date</th>\n                    <th>View Details</th>\n                    <th>Update Application Status</th>\n                </tr>\n                <tbody>\n                    {\n                        applications.map((ele)=>{\n                            return (\n                                <tr>\n                                    <td>{ele.name}</td>\n                                    <td>{ele.skills}</td>\n                                    <td>{ele.experience}</td>\n                                    <td>{ele.createdAt.slice(0, 10)}</td>\n                                    <td><button type=\"button\" class=\"btn btn-primary\" key={ele._id} onClick={()=>{\n                                        handleDetails(ele._id)\n                                    }}>View Details</button></td>\n                                    {\n                                        ele.status === \"applied\" && (<td><button type=\"button\" class=\"btn btn-success\" onClick={()=>{\n                                            shortlisted(ele._id)\n                                        }}>shortlist</button><button type=\"button\" class=\"btn btn-danger\" onClick={()=>{\n                                            rejected(ele._id)\n                                        }}>reject</button></td>)\n                                    }\n                                    {\n                                            ele.status === \"rejected\" && (<td><button type=\"button\" class=\"btn btn-primary\" disabled=\"true\">rejected</button></td>)\n                                    }\n                                    {\n                                            ele.status === \"shortlisted\" && (<td><button type=\"button\" class=\"btn btn-primary\" disabled=\"true\">shortlisted</button></td>)\n                                    }\n                                    \n                                </tr>\n                                \n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n           \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{candidate.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p> Contact number: {candidate.phone}</p>\n                    <p> Email: {candidate.email}</p>\n                    <p> Skills: {candidate.skills}</p>\n                    <p> Experience: {candidate.experience}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={handleClose} >Close</button>\n                </Modal.Footer>\n            </Modal>\n            \n        </div>\n    )\n}\n\nexport default Job",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":15,"nodeType":"45","messageId":"46","endLine":1,"endColumn":23},{"ruleId":"43","severity":1,"message":"47","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":13},{"ruleId":"43","severity":1,"message":"48","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"43","severity":1,"message":"49","line":1,"column":26,"nodeType":"45","messageId":"46","endLine":1,"endColumn":35},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Admin' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]